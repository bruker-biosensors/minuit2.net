<Project>
  <PropertyGroup>
    <Minuit2Wrapper>$(MSBuildThisFileDirectory)</Minuit2Wrapper>

    <CmakeBuildDir>$(MSBuildThisFileDirectory)/minuit2.wrap/build</CmakeBuildDir>
    <SwigToolsPath>$(MSBuildThisFileDirectory)minuit2.net/packages/swigwintools.4.2.0/tools</SwigToolsPath>
    <SwigToolsPathAlt>$(USERPROFILE)/.nuget/packages/swigwintools/4.2.0/tools</SwigToolsPathAlt>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="swigwintools" Version="4.2.0" />
  </ItemGroup>

  <Target Name="CheckPlatformConfiguration" BeforeTargets="BeforeBuild">
    <Error Text="AnyCPU platform is not supported for this project. Please use x64 or x86 platform configuration instead."
           Condition="'$(Platform)' == 'AnyCPU' OR '$(PlatformTarget)' == 'AnyCPU'" />
  </Target>

  <Target Name="FindSwigExecutable" BeforeTargets="CreateBuildDirectories">
    <ItemGroup>
      <!-- Try common NuGet package locations -->
      <PossibleSwigPaths Include="$(MSBuildProjectDirectory)\packages/swigwintools.*/tools/swigwin-*/swig.exe" />
      <PossibleSwigPaths Include="$(MSBuildThisFileDirectory)\packages/swigwintools.*/tools/swigwin-*/swig.exe" />
      <PossibleSwigPaths Include="$(NuGetPackageRoot)\swigwintools/*/tools/swigwin-*/swig.exe" />
      <PossibleSwigPaths Include="$(USERPROFILE)\.nuget/packages/swigwintools/*/tools/swigwin-*/swig.exe" />
      <PossibleSwigPaths Include="$(MSBuildProjectDirectory)\../packages/swigwintools.*/tools/swigwin-*/swig.exe" />
    </ItemGroup>


    <!-- Find first existing SWIG executable -->
    <ItemGroup>
      <FoundSwigExe Include="@(PossibleSwigPaths)"/>
    </ItemGroup>

    <PropertyGroup>
      <SwigOutputDir>$(MSBuildThisFileDirectory)/minuit2.net/$(IntermediateOutputPath)/SwigOutputDir>
      <SwigExecutable>%(FoundSwigExe.Identity)
      </SwigExecutable>
    </PropertyGroup>
  </Target>



  <!-- Ensure build directory exists -->
  <Target Name="CreateBuildDirectories" BeforeTargets="BeforeBuild">
    <MakeDir Directories="$(BuildDir);$(SwigOutputDir);$(CmakeBuildDir)" />
  </Target>

  <!-- Run CMake Configure -->
  <Target Name="CmakeConfigure" BeforeTargets="BeforeBuild" DependsOnTargets="CreateBuildDirectories">
    <PropertyGroup>
      <CmakeBuildCommand>cmake -S $(Minuit2Wrapper) -B "$(CmakeBuildDir)" -DMINUIT2NET_PATH="$(SwigOutputDir)" -DSWIG_EXECUTABLE=$(SwigExecutable)</CmakeBuildCommand>
    </PropertyGroup>

    <Exec Command="$(CmakeBuildCommand)"
          WorkingDirectory="$(MSBuildThisFileDirectory)"
          ContinueOnError="false" />
  </Target>

  <!-- Build C++ Library and Generate SWIG Wrappers -->
  <Target Name="BuildNativeLibrary" BeforeTargets="BeforeBuild" DependsOnTargets="CmakeConfigure">
    <PropertyGroup>
      <CmakeBuildCommand>cmake --build "$(CmakeBuildDir)" --config $(Configuration)</CmakeBuildCommand>
    </PropertyGroup>

    <Exec Command="$(CmakeBuildCommand)"
          WorkingDirectory="$(MSBuildThisFileDirectory)"
          ContinueOnError="false" />
  </Target>

  <Target Name="CleanGeneratedDirectories" BeforeTargets="Clean">
    <RemoveDir Directories="$(CmakeBuildDir);$(SwigOutputDir)" />
  </Target>


  <!-- Include generated C# files in the project -->
<!--  <ItemGroup>-->
<!--    <Compile Include="$(SwigOutputDir)\**\*.cs" />-->
<!--  </ItemGroup>-->

<!--   Copy native DLL to output directory-->
<!--  <Target Name="CopyWrapperDll" AfterTargets="Build">-->
<!--    <ItemGroup>-->
<!--      <NativeDlls Include="$(CmakeBuildDir)\**\*.dll" />-->
<!--    </ItemGroup>-->
<!--    <Copy SourceFiles="@(NativeDlls)" DestinationFolder="$(OutDir)" />-->
<!--  </Target>-->

</Project>
